{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","ComicsList","comicsList","setComicsList","useState","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","_jsxs","className","children","itemsList","forEach","_ref","thumbnail","title","price","id","push","tabIndex","Link","to","concat","src","alt","createComicsList","disabled","style","onClick","ComicsPage","_Fragment","Helmet","name","content","AppBanner"],"mappings":"mMASA,MAAMA,EAAaA,CAACC,EAASC,EAAWC,KACpC,OAAQF,GACJ,IAAK,UACD,OAAOG,cAACC,IAAO,IACnB,IAAK,UACD,OAAOF,EAAiBC,cAACF,EAAS,IAAME,cAACC,IAAO,IACpD,IAAK,YACD,OAAOD,cAACF,EAAS,IACrB,IAAK,QACD,OAAOE,cAACE,IAAY,IACxB,QACI,MAAM,IAAIC,MAAM,4BACxB,EA0EWC,MAvEIA,KAEf,MAAOC,EAAYC,GAAiBC,mBAAS,KACtCR,EAAgBS,GAAqBD,oBAAS,IAC9CE,EAAQC,GAAaH,mBAAS,MAC9BI,EAAaC,GAAkBL,oBAAS,IAEzC,aAAEM,EAAY,QAAEhB,EAAO,WAAEiB,GAAeC,cAE9CC,qBAAU,KACNC,EAAUR,GAAQ,EAAK,GAExB,IAEH,MAAMQ,EAAYA,CAACR,EAAQS,KACbV,GAAVU,GACAL,EAAaJ,GACRU,KAAKC,GACLD,MAAK,IAAML,EAAW,cAAa,EAGtCM,EAAsBC,IACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAGZhB,GAAcD,GAAc,IAAIA,KAAegB,KAC/Cb,GAAkB,GAClBE,GAAUD,GAAUA,EAAS,IAC7BG,EAAeU,EAAM,EA2BzB,OACIE,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACxB9B,EAAWC,GAAS,IA1B7B,SAA0BQ,GACtB,MAAMsB,EAAY,GAgBlB,OAdAtB,EAAWuB,SAAQC,IAAsC,IAArC,UAAEC,EAAS,MAAEC,EAAK,MAAEC,EAAK,GAAEC,GAAIJ,EAC/CF,EAAUO,KACNlC,cAAA,MACImC,SAAU,EACVV,UAAU,eAAcC,SACpBF,eAACY,IAAI,CAACC,GAAE,WAAAC,OAAaL,GAAKP,SAAA,CACtB1B,cAAA,OAAKuC,IAAKT,EAAWL,UAAU,mBAAmBe,IAAKT,IACvD/B,cAAA,OAAKyB,UAAU,oBAAmBC,SAAEK,IACpC/B,cAAA,OAAKyB,UAAU,qBAAoBC,SAAEM,QANxCC,GAQH,IAKVjC,cAAA,MAAIyB,UAAU,eAAcC,SACvBC,GAGb,CAImCc,CAAiBpC,IAAaN,GACzDC,cAAA,UACIyB,UAAU,mCACViB,SAAU3C,EACV4C,MAAO,CAAE,QAAWhC,EAAc,OAAS,SAC3CiC,QAASA,IAAM3B,EAAUR,GAAQiB,SACjC1B,cAAA,OAAKyB,UAAU,QAAOC,SAAC,kBAEzB,ECrECmB,UAjBIA,IAGXrB,eAAAsB,WAAA,CAAApB,SAAA,CACIF,eAACuB,IAAM,CAAArB,SAAA,CACH1B,cAAA,QACIgD,KAAK,cACLC,QAAQ,iCAEZjD,cAAA,SAAA0B,SAAO,mBAEX1B,cAACkD,IAAS,IACVlD,cAACI,EAAU,M","file":"static/js/6.59fca712.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n    switch (process) {\r\n        case 'waiting' :\r\n            return <Spinner />;\r\n        case 'loading' :\r\n            return newItemLoading ? <Component /> : <Spinner />;\r\n        case 'confirmed' :\r\n            return <Component />;\r\n        case 'error' :\r\n            return <ErrorMessage />;\r\n        default :\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const { getAllComics, process, setProcess } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 9);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function createComicsList(comicsList) {\r\n        const itemsList = [];\r\n\r\n        comicsList.forEach(({ thumbnail, title, price, id }) => {\r\n            itemsList.push(\r\n                <li key={id}\r\n                    tabIndex={0}\r\n                    className=\"comics__item\">\r\n                        <Link to={`/comics/${id}`}>\r\n                            <img src={thumbnail} className=\"comics__item-img\" alt={title}/>\r\n                            <div className=\"comics__item-name\">{title}</div>\r\n                            <div className=\"comics__item-price\">{price}</div>\r\n                        </Link>\r\n                </li>)\r\n\r\n        });\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {itemsList}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContent(process, () => createComicsList(comicsList), newItemLoading)}\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;\r\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    \r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with the List of Comics\"\r\n                />\r\n                <title>Comics Page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}